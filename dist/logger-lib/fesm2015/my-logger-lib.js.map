{"version":3,"file":"my-logger-lib.js","sources":["ng://@my/logger-lib/lib/logger.config.ts","ng://@my/logger-lib/lib/logger.service.ts","ng://@my/logger-lib/lib/log-monitor.component.ts","ng://@my/logger-lib/lib/logger.module.ts","ng://@my/logger-lib/index.ts","ng://@my/logger-lib/my-logger-lib.ts"],"sourcesContent":["\r\nexport abstract class LoggerConfig {\r\n    enableDebug: boolean;\r\n}","import { Injectable, Optional } from '@angular/core';\r\nimport { LoggerConfig } from './logger.config';\r\n\r\n@Injectable({\r\n  providedIn: 'root' \r\n})\r\nexport class LoggerService {\r\n\r\n  constructor(@Optional() private config: LoggerConfig) {\r\n  }\r\n\r\n  debug(message: string): void {\r\n    if (!this.config.enableDebug) return;\r\n    console.debug(message);\r\n  }\r\n\r\n  log(message: string): void {\r\n    console.log(message);\r\n  }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'logger-lib-monitor',\r\n  template: `\r\n    <h1>\r\n      Log Monitor (dummy)\r\n    </h1>\r\n    <p>{{stats}}</p>\r\n  `,\r\n  styles: []\r\n})\r\nexport class LogMonitorComponent {\r\n  @Input() stats: number;\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LogMonitorComponent } from './log-monitor.component';\r\nimport { LoggerConfig } from './logger.config';\r\nimport {LoggerService} from './logger.service';\r\n\r\n// imports: [ LoggerModule.forRoot({ ... }) ] \r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    LogMonitorComponent\r\n  ],\r\n  // providers: [\r\n  //   LoggerService\r\n  // ],\r\n  exports: [\r\n    LogMonitorComponent\r\n  ]\r\n})\r\nexport class LoggerModule {\r\n\r\n  // Setup\r\n  static forRoot(config: LoggerConfig): ModuleWithProviders<LoggerModule> {\r\n    return {\r\n      ngModule: LoggerModule,\r\n      providers: [\r\n        { provide: LoggerConfig, useValue: config }\r\n      ]\r\n    }\r\n  }\r\n\r\n}\r\n","/*\r\n * Public API Surface of logger-lib\r\n */\r\nexport * from './lib/logger.config';\r\nexport * from './lib/logger.service';\r\nexport * from './lib/log-monitor.component';\r\nexport * from './lib/logger.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;MACsB,YAAY;;;ICKrB,aAAa,GAA1B,MAAa,aAAa;IAExB,YAAgC,MAAoB;QAApB,WAAM,GAAN,MAAM,CAAc;KACnD;IAED,KAAK,CAAC,OAAe;QACnB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW;YAAE,OAAO;QACrC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;KACxB;IAED,GAAG,CAAC,OAAe;QACjB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;KACtB;CAEF,CAAA;;YAZyC,YAAY,uBAAvC,QAAQ;;;AAFV,aAAa;IAHzB,UAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;IAGa,WAAA,QAAQ,EAAE,CAAA;qCAAiB,YAAY;GAFzC,aAAa,CAczB;;ICRY,mBAAmB,GAAhC,MAAa,mBAAmB;CAE/B,CAAA;AADU;IAAR,KAAK,EAAE;;kDAAe;AADZ,mBAAmB;IAV/B,SAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,QAAQ,EAAE;;;;;GAKT;QACD,MAAM,EAAE,EAAE;KACX,CAAC;GACW,mBAAmB,CAE/B;;;ACRD;AAgBA,IAAa,YAAY,oBAAzB,MAAa,YAAY;;IAGvB,OAAO,OAAO,CAAC,MAAoB;QACjC,OAAO;YACL,QAAQ,EAAE,cAAY;YACtB,SAAS,EAAE;gBACT,EAAE,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,MAAM,EAAE;aAC5C;SACF,CAAA;KACF;CAEF,CAAA;AAZY,YAAY;IAdxB,QAAQ,CAAC;QACR,OAAO,EAAE;YACP,YAAY;SACb;QACD,YAAY,EAAE;YACZ,mBAAmB;SACpB;;;;QAID,OAAO,EAAE;YACP,mBAAmB;SACpB;KACF,CAAC;GACW,YAAY,CAYxB;;AClCD;;GAEG;;ACFH;;GAEG;;;;"}
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable, Optional } from '@angular/core';
import { of, merge } from 'rxjs';
import { catchError, filter, map, take, mergeMap, timeout } from 'rxjs/operators';
import { OAuthResourceServerErrorHandler } from './resource-server-error-handler';
import { OAuthModuleConfig } from '../oauth-module.config';
import { OAuthStorage } from '../types';
import { OAuthService } from '../oauth-service';
import * as ɵngcc0 from '@angular/core';
export class DefaultOAuthInterceptor {
    /**
     * @param {?} authStorage
     * @param {?} oAuthService
     * @param {?} errorHandler
     * @param {?} moduleConfig
     */
    constructor(authStorage, oAuthService, errorHandler, moduleConfig) {
        this.authStorage = authStorage;
        this.oAuthService = oAuthService;
        this.errorHandler = errorHandler;
        this.moduleConfig = moduleConfig;
    }
    /**
     * @private
     * @param {?} url
     * @return {?}
     */
    checkUrl(url) {
        if (this.moduleConfig.resourceServer.customUrlValidation) {
            return this.moduleConfig.resourceServer.customUrlValidation(url);
        }
        if (this.moduleConfig.resourceServer.allowedUrls) {
            return !!this.moduleConfig.resourceServer.allowedUrls.find((/**
             * @param {?} u
             * @return {?}
             */
            u => url.startsWith(u)));
        }
        return true;
    }
    /**
     * @param {?} req
     * @param {?} next
     * @return {?}
     */
    intercept(req, next) {
        /** @type {?} */
        const url = req.url.toLowerCase();
        if (!this.moduleConfig) {
            return next.handle(req);
        }
        if (!this.moduleConfig.resourceServer) {
            return next.handle(req);
        }
        if (this.moduleConfig.resourceServer.allowedUrls && !this.checkUrl(url)) {
            return next.handle(req);
        }
        /** @type {?} */
        const sendAccessToken = this.moduleConfig.resourceServer.sendAccessToken;
        if (!sendAccessToken) {
            return next
                .handle(req)
                .pipe(catchError((/**
             * @param {?} err
             * @return {?}
             */
            err => this.errorHandler.handleError(err))));
        }
        return merge(of(this.oAuthService.getAccessToken()).pipe(filter((/**
         * @param {?} token
         * @return {?}
         */
        token => token ? true : false))), this.oAuthService.events.pipe(filter((/**
         * @param {?} e
         * @return {?}
         */
        e => e.type === 'token_received')), timeout(this.oAuthService.waitForTokenInMsec || 0), catchError((/**
         * @param {?} _
         * @return {?}
         */
        _ => of(null))), // timeout is not an error
        map((/**
         * @param {?} _
         * @return {?}
         */
        _ => this.oAuthService.getAccessToken())))).pipe(take(1), mergeMap((/**
         * @param {?} token
         * @return {?}
         */
        token => {
            if (token) {
                /** @type {?} */
                const header = 'Bearer ' + token;
                /** @type {?} */
                const headers = req.headers.set('Authorization', header);
                req = req.clone({ headers });
            }
            return next
                .handle(req)
                .pipe(catchError((/**
             * @param {?} err
             * @return {?}
             */
            err => this.errorHandler.handleError(err))));
        })));
    }
}
DefaultOAuthInterceptor.ɵfac = function DefaultOAuthInterceptor_Factory(t) { return new (t || DefaultOAuthInterceptor)(ɵngcc0.ɵɵinject(OAuthStorage), ɵngcc0.ɵɵinject(OAuthService), ɵngcc0.ɵɵinject(OAuthResourceServerErrorHandler), ɵngcc0.ɵɵinject(OAuthModuleConfig, 8)); };
DefaultOAuthInterceptor.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: DefaultOAuthInterceptor, factory: DefaultOAuthInterceptor.ɵfac });
/** @nocollapse */
DefaultOAuthInterceptor.ctorParameters = () => [
    { type: OAuthStorage },
    { type: OAuthService },
    { type: OAuthResourceServerErrorHandler },
    { type: OAuthModuleConfig, decorators: [{ type: Optional }] }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DefaultOAuthInterceptor, [{
        type: Injectable
    }], function () { return [{ type: OAuthStorage }, { type: OAuthService }, { type: OAuthResourceServerErrorHandler }, { type: OAuthModuleConfig, decorators: [{
                type: Optional
            }] }]; }, null); })();
if (false) {
    /**
     * @type {?}
     * @private
     */
    DefaultOAuthInterceptor.prototype.authStorage;
    /**
     * @type {?}
     * @private
     */
    DefaultOAuthInterceptor.prototype.oAuthService;
    /**
     * @type {?}
     * @private
     */
    DefaultOAuthInterceptor.prototype.errorHandler;
    /**
     * @type {?}
     * @private
     */
    DefaultOAuthInterceptor.prototype.moduleConfig;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkQ6L2Jhay9iZXJhdHVuZy9hbmd1bGFyMi93b3Jrc2hvcHNfYWR2YW5jZWQvYWR2YW5jZWQtbngtd29ya3NwYWNlL25vZGVfbW9kdWxlcy9hbmd1bGFyLW9hdXRoMi1vaWRjL2VzbTIwMTUvaW50ZXJjZXB0b3JzL2RlZmF1bHQtb2F1dGguaW50ZXJjZXB0b3IuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7OztBQVdBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0FpR0Msb0lBR0M7Ozs7Ozs7Ozs7OztrQ0FPQSIsImZpbGUiOiJkZWZhdWx0LW9hdXRoLmludGVyY2VwdG9yLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxyXG4gKiBAc3VwcHJlc3Mge2NoZWNrVHlwZXMsZXh0cmFSZXF1aXJlLG1pc3NpbmdPdmVycmlkZSxtaXNzaW5nUmV0dXJuLHVudXNlZFByaXZhdGVNZW1iZXJzLHVzZWxlc3NDb2RlfSBjaGVja2VkIGJ5IHRzY1xyXG4gKi9cclxuaW1wb3J0IHsgSW5qZWN0YWJsZSwgT3B0aW9uYWwgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgb2YsIG1lcmdlIH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IGNhdGNoRXJyb3IsIGZpbHRlciwgbWFwLCB0YWtlLCBtZXJnZU1hcCwgdGltZW91dCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcclxuaW1wb3J0IHsgT0F1dGhSZXNvdXJjZVNlcnZlckVycm9ySGFuZGxlciB9IGZyb20gJy4vcmVzb3VyY2Utc2VydmVyLWVycm9yLWhhbmRsZXInO1xyXG5pbXBvcnQgeyBPQXV0aE1vZHVsZUNvbmZpZyB9IGZyb20gJy4uL29hdXRoLW1vZHVsZS5jb25maWcnO1xyXG5pbXBvcnQgeyBPQXV0aFN0b3JhZ2UgfSBmcm9tICcuLi90eXBlcyc7XHJcbmltcG9ydCB7IE9BdXRoU2VydmljZSB9IGZyb20gJy4uL29hdXRoLXNlcnZpY2UnO1xyXG5leHBvcnQgY2xhc3MgRGVmYXVsdE9BdXRoSW50ZXJjZXB0b3Ige1xyXG4gICAgLyoqXHJcbiAgICAgKiBAcGFyYW0gez99IGF1dGhTdG9yYWdlXHJcbiAgICAgKiBAcGFyYW0gez99IG9BdXRoU2VydmljZVxyXG4gICAgICogQHBhcmFtIHs/fSBlcnJvckhhbmRsZXJcclxuICAgICAqIEBwYXJhbSB7P30gbW9kdWxlQ29uZmlnXHJcbiAgICAgKi9cclxuICAgIGNvbnN0cnVjdG9yKGF1dGhTdG9yYWdlLCBvQXV0aFNlcnZpY2UsIGVycm9ySGFuZGxlciwgbW9kdWxlQ29uZmlnKSB7XHJcbiAgICAgICAgdGhpcy5hdXRoU3RvcmFnZSA9IGF1dGhTdG9yYWdlO1xyXG4gICAgICAgIHRoaXMub0F1dGhTZXJ2aWNlID0gb0F1dGhTZXJ2aWNlO1xyXG4gICAgICAgIHRoaXMuZXJyb3JIYW5kbGVyID0gZXJyb3JIYW5kbGVyO1xyXG4gICAgICAgIHRoaXMubW9kdWxlQ29uZmlnID0gbW9kdWxlQ29uZmlnO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBAcHJpdmF0ZVxyXG4gICAgICogQHBhcmFtIHs/fSB1cmxcclxuICAgICAqIEByZXR1cm4gez99XHJcbiAgICAgKi9cclxuICAgIGNoZWNrVXJsKHVybCkge1xyXG4gICAgICAgIGlmICh0aGlzLm1vZHVsZUNvbmZpZy5yZXNvdXJjZVNlcnZlci5jdXN0b21VcmxWYWxpZGF0aW9uKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLm1vZHVsZUNvbmZpZy5yZXNvdXJjZVNlcnZlci5jdXN0b21VcmxWYWxpZGF0aW9uKHVybCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLm1vZHVsZUNvbmZpZy5yZXNvdXJjZVNlcnZlci5hbGxvd2VkVXJscykge1xyXG4gICAgICAgICAgICByZXR1cm4gISF0aGlzLm1vZHVsZUNvbmZpZy5yZXNvdXJjZVNlcnZlci5hbGxvd2VkVXJscy5maW5kKCgvKipcclxuICAgICAgICAgICAgICogQHBhcmFtIHs/fSB1XHJcbiAgICAgICAgICAgICAqIEByZXR1cm4gez99XHJcbiAgICAgICAgICAgICAqL1xyXG4gICAgICAgICAgICB1ID0+IHVybC5zdGFydHNXaXRoKHUpKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBAcGFyYW0gez99IHJlcVxyXG4gICAgICogQHBhcmFtIHs/fSBuZXh0XHJcbiAgICAgKiBAcmV0dXJuIHs/fVxyXG4gICAgICovXHJcbiAgICBpbnRlcmNlcHQocmVxLCBuZXh0KSB7XHJcbiAgICAgICAgLyoqIEB0eXBlIHs/fSAqL1xyXG4gICAgICAgIGNvbnN0IHVybCA9IHJlcS51cmwudG9Mb3dlckNhc2UoKTtcclxuICAgICAgICBpZiAoIXRoaXMubW9kdWxlQ29uZmlnKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBuZXh0LmhhbmRsZShyZXEpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoIXRoaXMubW9kdWxlQ29uZmlnLnJlc291cmNlU2VydmVyKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBuZXh0LmhhbmRsZShyZXEpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodGhpcy5tb2R1bGVDb25maWcucmVzb3VyY2VTZXJ2ZXIuYWxsb3dlZFVybHMgJiYgIXRoaXMuY2hlY2tVcmwodXJsKSkge1xyXG4gICAgICAgICAgICByZXR1cm4gbmV4dC5oYW5kbGUocmVxKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLyoqIEB0eXBlIHs/fSAqL1xyXG4gICAgICAgIGNvbnN0IHNlbmRBY2Nlc3NUb2tlbiA9IHRoaXMubW9kdWxlQ29uZmlnLnJlc291cmNlU2VydmVyLnNlbmRBY2Nlc3NUb2tlbjtcclxuICAgICAgICBpZiAoIXNlbmRBY2Nlc3NUb2tlbikge1xyXG4gICAgICAgICAgICByZXR1cm4gbmV4dFxyXG4gICAgICAgICAgICAgICAgLmhhbmRsZShyZXEpXHJcbiAgICAgICAgICAgICAgICAucGlwZShjYXRjaEVycm9yKCgvKipcclxuICAgICAgICAgICAgICogQHBhcmFtIHs/fSBlcnJcclxuICAgICAgICAgICAgICogQHJldHVybiB7P31cclxuICAgICAgICAgICAgICovXHJcbiAgICAgICAgICAgIGVyciA9PiB0aGlzLmVycm9ySGFuZGxlci5oYW5kbGVFcnJvcihlcnIpKSkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gbWVyZ2Uob2YodGhpcy5vQXV0aFNlcnZpY2UuZ2V0QWNjZXNzVG9rZW4oKSkucGlwZShmaWx0ZXIoKC8qKlxyXG4gICAgICAgICAqIEBwYXJhbSB7P30gdG9rZW5cclxuICAgICAgICAgKiBAcmV0dXJuIHs/fVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRva2VuID0+IHRva2VuID8gdHJ1ZSA6IGZhbHNlKSkpLCB0aGlzLm9BdXRoU2VydmljZS5ldmVudHMucGlwZShmaWx0ZXIoKC8qKlxyXG4gICAgICAgICAqIEBwYXJhbSB7P30gZVxyXG4gICAgICAgICAqIEByZXR1cm4gez99XHJcbiAgICAgICAgICovXHJcbiAgICAgICAgZSA9PiBlLnR5cGUgPT09ICd0b2tlbl9yZWNlaXZlZCcpKSwgdGltZW91dCh0aGlzLm9BdXRoU2VydmljZS53YWl0Rm9yVG9rZW5Jbk1zZWMgfHwgMCksIGNhdGNoRXJyb3IoKC8qKlxyXG4gICAgICAgICAqIEBwYXJhbSB7P30gX1xyXG4gICAgICAgICAqIEByZXR1cm4gez99XHJcbiAgICAgICAgICovXHJcbiAgICAgICAgXyA9PiBvZihudWxsKSkpLCAvLyB0aW1lb3V0IGlzIG5vdCBhbiBlcnJvclxyXG4gICAgICAgIG1hcCgoLyoqXHJcbiAgICAgICAgICogQHBhcmFtIHs/fSBfXHJcbiAgICAgICAgICogQHJldHVybiB7P31cclxuICAgICAgICAgKi9cclxuICAgICAgICBfID0+IHRoaXMub0F1dGhTZXJ2aWNlLmdldEFjY2Vzc1Rva2VuKCkpKSkpLnBpcGUodGFrZSgxKSwgbWVyZ2VNYXAoKC8qKlxyXG4gICAgICAgICAqIEBwYXJhbSB7P30gdG9rZW5cclxuICAgICAgICAgKiBAcmV0dXJuIHs/fVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRva2VuID0+IHtcclxuICAgICAgICAgICAgaWYgKHRva2VuKSB7XHJcbiAgICAgICAgICAgICAgICAvKiogQHR5cGUgez99ICovXHJcbiAgICAgICAgICAgICAgICBjb25zdCBoZWFkZXIgPSAnQmVhcmVyICcgKyB0b2tlbjtcclxuICAgICAgICAgICAgICAgIC8qKiBAdHlwZSB7P30gKi9cclxuICAgICAgICAgICAgICAgIGNvbnN0IGhlYWRlcnMgPSByZXEuaGVhZGVycy5zZXQoJ0F1dGhvcml6YXRpb24nLCBoZWFkZXIpO1xyXG4gICAgICAgICAgICAgICAgcmVxID0gcmVxLmNsb25lKHsgaGVhZGVycyB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gbmV4dFxyXG4gICAgICAgICAgICAgICAgLmhhbmRsZShyZXEpXHJcbiAgICAgICAgICAgICAgICAucGlwZShjYXRjaEVycm9yKCgvKipcclxuICAgICAgICAgICAgICogQHBhcmFtIHs/fSBlcnJcclxuICAgICAgICAgICAgICogQHJldHVybiB7P31cclxuICAgICAgICAgICAgICovXHJcbiAgICAgICAgICAgIGVyciA9PiB0aGlzLmVycm9ySGFuZGxlci5oYW5kbGVFcnJvcihlcnIpKSkpO1xyXG4gICAgICAgIH0pKSk7XHJcbiAgICB9XHJcbn1cclxuRGVmYXVsdE9BdXRoSW50ZXJjZXB0b3IuZGVjb3JhdG9ycyA9IFtcclxuICAgIHsgdHlwZTogSW5qZWN0YWJsZSB9XHJcbl07XHJcbi8qKiBAbm9jb2xsYXBzZSAqL1xyXG5EZWZhdWx0T0F1dGhJbnRlcmNlcHRvci5jdG9yUGFyYW1ldGVycyA9ICgpID0+IFtcclxuICAgIHsgdHlwZTogT0F1dGhTdG9yYWdlIH0sXHJcbiAgICB7IHR5cGU6IE9BdXRoU2VydmljZSB9LFxyXG4gICAgeyB0eXBlOiBPQXV0aFJlc291cmNlU2VydmVyRXJyb3JIYW5kbGVyIH0sXHJcbiAgICB7IHR5cGU6IE9BdXRoTW9kdWxlQ29uZmlnLCBkZWNvcmF0b3JzOiBbeyB0eXBlOiBPcHRpb25hbCB9XSB9XHJcbl07XHJcbmlmIChmYWxzZSkge1xyXG4gICAgLyoqXHJcbiAgICAgKiBAdHlwZSB7P31cclxuICAgICAqIEBwcml2YXRlXHJcbiAgICAgKi9cclxuICAgIERlZmF1bHRPQXV0aEludGVyY2VwdG9yLnByb3RvdHlwZS5hdXRoU3RvcmFnZTtcclxuICAgIC8qKlxyXG4gICAgICogQHR5cGUgez99XHJcbiAgICAgKiBAcHJpdmF0ZVxyXG4gICAgICovXHJcbiAgICBEZWZhdWx0T0F1dGhJbnRlcmNlcHRvci5wcm90b3R5cGUub0F1dGhTZXJ2aWNlO1xyXG4gICAgLyoqXHJcbiAgICAgKiBAdHlwZSB7P31cclxuICAgICAqIEBwcml2YXRlXHJcbiAgICAgKi9cclxuICAgIERlZmF1bHRPQXV0aEludGVyY2VwdG9yLnByb3RvdHlwZS5lcnJvckhhbmRsZXI7XHJcbiAgICAvKipcclxuICAgICAqIEB0eXBlIHs/fVxyXG4gICAgICogQHByaXZhdGVcclxuICAgICAqL1xyXG4gICAgRGVmYXVsdE9BdXRoSW50ZXJjZXB0b3IucHJvdG90eXBlLm1vZHVsZUNvbmZpZztcclxufVxyIl19
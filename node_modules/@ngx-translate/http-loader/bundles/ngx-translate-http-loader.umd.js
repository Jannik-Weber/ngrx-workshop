(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
    typeof define === 'function' && define.amd ? define('@ngx-translate/http-loader', ['exports'], factory) :
    (factory((global['ngx-translate'] = global['ngx-translate'] || {}, global['ngx-translate']['http-loader'] = {})));
}(this, (function (exports) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
     */
    var TranslateHttpLoader = /** @class */ (function () {
        function TranslateHttpLoader(http, prefix, suffix) {
            if (prefix === void 0) {
                prefix = "/assets/i18n/";
            }
            if (suffix === void 0) {
                suffix = ".json";
            }
            this.http = http;
            this.prefix = prefix;
            this.suffix = suffix;
        }
        /**
         * Gets the translations from the server
         */
        /**
         * Gets the translations from the server
         * @param {?} lang
         * @return {?}
         */
        TranslateHttpLoader.prototype.getTranslation = /**
         * Gets the translations from the server
         * @param {?} lang
         * @return {?}
         */
            function (lang) {
                return this.http.get("" + this.prefix + lang + this.suffix);
            };
        return TranslateHttpLoader;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
     */

    exports.TranslateHttpLoader = TranslateHttpLoader;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkQ6L2Jhay9iZXJhdHVuZy9hbmd1bGFyMi93b3Jrc2hvcHNfYWR2YW5jZWQvYWR2YW5jZWQtbngtd29ya3NwYWNlL25vZGVfbW9kdWxlcy9Abmd4LXRyYW5zbGF0ZS9odHRwLWxvYWRlci9idW5kbGVzL25neC10cmFuc2xhdGUtaHR0cC1sb2FkZXIudW1kLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6Im5neC10cmFuc2xhdGUtaHR0cC1sb2FkZXIudW1kLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIChnbG9iYWwsIGZhY3RvcnkpIHtcbiAgICB0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgPyBmYWN0b3J5KGV4cG9ydHMpIDpcbiAgICB0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQgPyBkZWZpbmUoJ0BuZ3gtdHJhbnNsYXRlL2h0dHAtbG9hZGVyJywgWydleHBvcnRzJ10sIGZhY3RvcnkpIDpcbiAgICAoZmFjdG9yeSgoZ2xvYmFsWyduZ3gtdHJhbnNsYXRlJ10gPSBnbG9iYWxbJ25neC10cmFuc2xhdGUnXSB8fCB7fSwgZ2xvYmFsWyduZ3gtdHJhbnNsYXRlJ11bJ2h0dHAtbG9hZGVyJ10gPSB7fSkpKTtcbn0odGhpcywgKGZ1bmN0aW9uIChleHBvcnRzKSB7ICd1c2Ugc3RyaWN0JztcblxuICAgIC8qKlxuICAgICAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxuICAgICAqIEBzdXBwcmVzcyB7Y2hlY2tUeXBlcyxleHRyYVJlcXVpcmUsbWlzc2luZ1JldHVybix1c2VsZXNzQ29kZX0gY2hlY2tlZCBieSB0c2NcbiAgICAgKi9cbiAgICB2YXIgVHJhbnNsYXRlSHR0cExvYWRlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZnVuY3Rpb24gVHJhbnNsYXRlSHR0cExvYWRlcihodHRwLCBwcmVmaXgsIHN1ZmZpeCkge1xuICAgICAgICAgICAgaWYgKHByZWZpeCA9PT0gdm9pZCAwKSB7XG4gICAgICAgICAgICAgICAgcHJlZml4ID0gXCIvYXNzZXRzL2kxOG4vXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoc3VmZml4ID09PSB2b2lkIDApIHtcbiAgICAgICAgICAgICAgICBzdWZmaXggPSBcIi5qc29uXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLmh0dHAgPSBodHRwO1xuICAgICAgICAgICAgdGhpcy5wcmVmaXggPSBwcmVmaXg7XG4gICAgICAgICAgICB0aGlzLnN1ZmZpeCA9IHN1ZmZpeDtcbiAgICAgICAgfVxuICAgICAgICAvKipcbiAgICAgICAgICogR2V0cyB0aGUgdHJhbnNsYXRpb25zIGZyb20gdGhlIHNlcnZlclxuICAgICAgICAgKi9cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEdldHMgdGhlIHRyYW5zbGF0aW9ucyBmcm9tIHRoZSBzZXJ2ZXJcbiAgICAgICAgICogQHBhcmFtIHs/fSBsYW5nXG4gICAgICAgICAqIEByZXR1cm4gez99XG4gICAgICAgICAqL1xuICAgICAgICBUcmFuc2xhdGVIdHRwTG9hZGVyLnByb3RvdHlwZS5nZXRUcmFuc2xhdGlvbiA9IC8qKlxuICAgICAgICAgKiBHZXRzIHRoZSB0cmFuc2xhdGlvbnMgZnJvbSB0aGUgc2VydmVyXG4gICAgICAgICAqIEBwYXJhbSB7P30gbGFuZ1xuICAgICAgICAgKiBAcmV0dXJuIHs/fVxuICAgICAgICAgKi9cbiAgICAgICAgICAgIGZ1bmN0aW9uIChsYW5nKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuaHR0cC5nZXQoXCJcIiArIHRoaXMucHJlZml4ICsgbGFuZyArIHRoaXMuc3VmZml4KTtcbiAgICAgICAgICAgIH07XG4gICAgICAgIHJldHVybiBUcmFuc2xhdGVIdHRwTG9hZGVyO1xuICAgIH0oKSk7XG5cbiAgICAvKipcbiAgICAgKiBAZmlsZW92ZXJ2aWV3IGFkZGVkIGJ5IHRzaWNrbGVcbiAgICAgKiBAc3VwcHJlc3Mge2NoZWNrVHlwZXMsZXh0cmFSZXF1aXJlLG1pc3NpbmdSZXR1cm4sdXNlbGVzc0NvZGV9IGNoZWNrZWQgYnkgdHNjXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBAZmlsZW92ZXJ2aWV3IGFkZGVkIGJ5IHRzaWNrbGVcbiAgICAgKiBAc3VwcHJlc3Mge2NoZWNrVHlwZXMsZXh0cmFSZXF1aXJlLG1pc3NpbmdSZXR1cm4sdXNlbGVzc0NvZGV9IGNoZWNrZWQgYnkgdHNjXG4gICAgICovXG5cbiAgICBleHBvcnRzLlRyYW5zbGF0ZUh0dHBMb2FkZXIgPSBUcmFuc2xhdGVIdHRwTG9hZGVyO1xuXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxufSkpKTtcbiJdfQ==
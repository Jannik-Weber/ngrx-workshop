import { ProjectGraph } from '../core/project-graph';
import { NxJson } from '../core/shared-interfaces';
import { Task } from './tasks-runner';
export declare class Hasher {
    private readonly projectGraph;
    private readonly nxJson;
    static version: string;
    implicitDependencies: Promise<string>;
    fileHashes: FileHashes;
    projectHashes: ProjectHashes;
    constructor(projectGraph: ProjectGraph, nxJson: NxJson);
    hash(task: Task): Promise<string>;
    private implicitDepsHash;
}
export declare class ProjectHashes {
    private readonly projectGraph;
    private readonly fileHashes;
    private sourceHashes;
    constructor(projectGraph: ProjectGraph, fileHashes: FileHashes);
    hashProject(projectName: string, visited: string[]): any;
    private hashProjectNodeSource;
}
export declare class FileHashes {
    private queue;
    private numberOfConcurrentReads;
    private fileHashes;
    private resolvers;
    hashFile(path: string): Promise<string>;
    private pushFileIntoQueue;
    private takeFromQueue;
    private processPath;
}
